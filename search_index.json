[["决策树及其组合方法.html", "Chapter 8 决策树及其组合方法 8.1 决策树 8.2 实例", " Chapter 8 决策树及其组合方法 Decision Tree: A decision tree is a decision support tool that uses a tree-like graph or model of decisions and their possible consequences, including chance event outcomes, resource costs, and utility. Decision trees are produced by algorithms that identify various ways of splitting a data set into branch-like segments. These segments form an inverted decision tree that originates with a root node at the top of the tree. 8.1 决策树 8.2 实例 ##### # importing churn data set from .csv file data1 &lt;-read.csv(&quot;./data/chun_data.csv&quot;,header= TRUE,sep=&quot;,&quot;) #as the first three columns of the data arent important for the prediction we drop those columns from the data frame # drop the variables from the data set data1&lt;-data1[-c(1,2,3)] #data exploration #gives the dimensions of the data set dim(data1) ## [1] 5000 17 #gives the names of the variables in the data set names(data1) ## [1] &quot;international_plan&quot; &quot;voice_mail_plan&quot; ## [3] &quot;number_vmail_messages&quot; &quot;total_day_minutes&quot; ## [5] &quot;total_day_calls&quot; &quot;total_day_charge&quot; ## [7] &quot;total_eve_minutes&quot; &quot;total_eve_calls&quot; ## [9] &quot;total_eve_charge&quot; &quot;total_night_minutes&quot; ## [11] &quot;total_night_calls&quot; &quot;total_night_charge&quot; ## [13] &quot;total_intl_minutes&quot; &quot;total_intl_calls&quot; ## [15] &quot;total_intl_charge&quot; &quot;number_customer_service_calls&quot; ## [17] &quot;churn&quot; #displays top 10 observations of the data set head(data1) ## international_plan voice_mail_plan number_vmail_messages total_day_minutes ## 1 no yes 25 265.1 ## 2 no yes 26 161.6 ## 3 no no 0 243.4 ## 4 yes no 0 299.4 ## 5 yes no 0 166.7 ## 6 yes no 0 223.4 ## total_day_calls total_day_charge total_eve_minutes total_eve_calls ## 1 110 45.07 197.4 99 ## 2 123 27.47 195.5 103 ## 3 114 41.38 121.2 110 ## 4 71 50.90 61.9 88 ## 5 113 28.34 148.3 122 ## 6 98 37.98 220.6 101 ## total_eve_charge total_night_minutes total_night_calls total_night_charge ## 1 16.78 244.7 91 11.01 ## 2 16.62 254.4 103 11.45 ## 3 10.30 162.6 104 7.32 ## 4 5.26 196.9 89 8.86 ## 5 12.61 186.9 121 8.41 ## 6 18.75 203.9 118 9.18 ## total_intl_minutes total_intl_calls total_intl_charge ## 1 10.0 3 2.70 ## 2 13.7 3 3.70 ## 3 12.2 5 3.29 ## 4 6.6 7 1.78 ## 5 10.1 3 2.73 ## 6 6.3 6 1.70 ## number_customer_service_calls churn ## 1 1 no ## 2 1 no ## 3 0 no ## 4 2 no ## 5 3 no ## 6 0 no #displays bottom top 10 observations of the data set tail(data1) ## international_plan voice_mail_plan number_vmail_messages total_day_minutes ## 4995 no no 0 170.7 ## 4996 no yes 40 235.7 ## 4997 no no 0 184.2 ## 4998 no no 0 140.6 ## 4999 no no 0 188.8 ## 5000 no yes 34 129.4 ## total_day_calls total_day_charge total_eve_minutes total_eve_calls ## 4995 101 29.02 193.1 126 ## 4996 127 40.07 223.0 126 ## 4997 90 31.31 256.8 73 ## 4998 89 23.90 172.8 128 ## 4999 67 32.10 171.7 92 ## 5000 102 22.00 267.1 104 ## total_eve_charge total_night_minutes total_night_calls total_night_charge ## 4995 16.41 129.1 104 5.81 ## 4996 18.96 297.5 116 13.39 ## 4997 21.83 213.6 113 9.61 ## 4998 14.69 212.4 97 9.56 ## 4999 14.59 224.4 89 10.10 ## 5000 22.70 154.8 100 6.97 ## total_intl_minutes total_intl_calls total_intl_charge ## 4995 6.9 7 1.86 ## 4996 9.9 5 2.67 ## 4997 14.7 2 3.97 ## 4998 13.6 4 3.67 ## 4999 8.5 6 2.30 ## 5000 9.3 16 2.51 ## number_customer_service_calls churn ## 4995 1 no ## 4996 2 no ## 4997 3 yes ## 4998 1 no ## 4999 0 no ## 5000 0 no #displays structure of the variables in the data set str(data1) ## &#39;data.frame&#39;: 5000 obs. of 17 variables: ## $ international_plan : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;yes&quot; ... ## $ voice_mail_plan : chr &quot;yes&quot; &quot;yes&quot; &quot;no&quot; &quot;no&quot; ... ## $ number_vmail_messages : int 25 26 0 0 0 0 24 0 0 37 ... ## $ total_day_minutes : num 265 162 243 299 167 ... ## $ total_day_calls : int 110 123 114 71 113 98 88 79 97 84 ... ## $ total_day_charge : num 45.1 27.5 41.4 50.9 28.3 ... ## $ total_eve_minutes : num 197.4 195.5 121.2 61.9 148.3 ... ## $ total_eve_calls : int 99 103 110 88 122 101 108 94 80 111 ... ## $ total_eve_charge : num 16.78 16.62 10.3 5.26 12.61 ... ## $ total_night_minutes : num 245 254 163 197 187 ... ## $ total_night_calls : int 91 103 104 89 121 118 118 96 90 97 ... ## $ total_night_charge : num 11.01 11.45 7.32 8.86 8.41 ... ## $ total_intl_minutes : num 10 13.7 12.2 6.6 10.1 6.3 7.5 7.1 8.7 11.2 ... ## $ total_intl_calls : int 3 3 5 7 3 6 7 6 4 5 ... ## $ total_intl_charge : num 2.7 3.7 3.29 1.78 2.73 1.7 2.03 1.92 2.35 3.02 ... ## $ number_customer_service_calls: int 1 1 0 2 3 0 3 0 1 0 ... ## $ churn : chr &quot;no&quot; &quot;no&quot; &quot;no&quot; &quot;no&quot; ... #gives the summary of the variables of the data set summary(data1) ## international_plan voice_mail_plan number_vmail_messages total_day_minutes ## Length:5000 Length:5000 Min. : 0.000 Min. : 0.0 ## Class :character Class :character 1st Qu.: 0.000 1st Qu.:143.7 ## Mode :character Mode :character Median : 0.000 Median :180.1 ## Mean : 7.755 Mean :180.3 ## 3rd Qu.:17.000 3rd Qu.:216.2 ## Max. :52.000 Max. :351.5 ## total_day_calls total_day_charge total_eve_minutes total_eve_calls ## Min. : 0 Min. : 0.00 Min. : 0.0 Min. : 0.0 ## 1st Qu.: 87 1st Qu.:24.43 1st Qu.:166.4 1st Qu.: 87.0 ## Median :100 Median :30.62 Median :201.0 Median :100.0 ## Mean :100 Mean :30.65 Mean :200.6 Mean :100.2 ## 3rd Qu.:113 3rd Qu.:36.75 3rd Qu.:234.1 3rd Qu.:114.0 ## Max. :165 Max. :59.76 Max. :363.7 Max. :170.0 ## total_eve_charge total_night_minutes total_night_calls total_night_charge ## Min. : 0.00 Min. : 0.0 Min. : 0.00 Min. : 0.000 ## 1st Qu.:14.14 1st Qu.:166.9 1st Qu.: 87.00 1st Qu.: 7.510 ## Median :17.09 Median :200.4 Median :100.00 Median : 9.020 ## Mean :17.05 Mean :200.4 Mean : 99.92 Mean : 9.018 ## 3rd Qu.:19.90 3rd Qu.:234.7 3rd Qu.:113.00 3rd Qu.:10.560 ## Max. :30.91 Max. :395.0 Max. :175.00 Max. :17.770 ## total_intl_minutes total_intl_calls total_intl_charge ## Min. : 0.00 Min. : 0.000 Min. :0.000 ## 1st Qu.: 8.50 1st Qu.: 3.000 1st Qu.:2.300 ## Median :10.30 Median : 4.000 Median :2.780 ## Mean :10.26 Mean : 4.435 Mean :2.771 ## 3rd Qu.:12.00 3rd Qu.: 6.000 3rd Qu.:3.240 ## Max. :20.00 Max. :20.000 Max. :5.400 ## number_customer_service_calls churn ## Min. :0.00 Length:5000 ## 1st Qu.:1.00 Class :character ## Median :1.00 Mode :character ## Mean :1.57 ## 3rd Qu.:2.00 ## Max. :9.00 #library for the sample.split function library(caTools) #splitting the data into training and testing data # sample the input data with 70% for training and 30% for testing data1$churn &lt;- factor(data1$churn) sample &lt;- sample.split(data1$churn,SplitRatio=0.70) trainData &lt;- subset(data1,sample==TRUE) testData &lt;- subset(data1,sample==FALSE) #rpart --- recursive partitioning decision tree library(rpart) #TO BUILD DECISON TREE BY USING RPART PACKAGE(recursive partitioning decision tree) churn_model&lt;- rpart(churn ~ .,data=trainData) churn_model ## n= 3500 ## ## node), split, n, loss, yval, (yprob) ## * denotes terminal node ## ## 1) root 3500 495 no (0.85857143 0.14142857) ## 2) total_day_minutes&lt; 264.45 3280 363 no (0.88932927 0.11067073) ## 4) number_customer_service_calls&lt; 3.5 3009 231 no (0.92323031 0.07676969) ## 8) international_plan=no 2733 124 no (0.95462861 0.04537139) ## 16) total_day_minutes&lt; 221.95 2300 56 no (0.97565217 0.02434783) * ## 17) total_day_minutes&gt;=221.95 433 68 no (0.84295612 0.15704388) ## 34) total_eve_minutes&lt; 242.35 353 24 no (0.93201133 0.06798867) * ## 35) total_eve_minutes&gt;=242.35 80 36 yes (0.45000000 0.55000000) ## 70) voice_mail_plan=yes 17 0 no (1.00000000 0.00000000) * ## 71) voice_mail_plan=no 63 19 yes (0.30158730 0.69841270) ## 142) total_night_minutes&lt; 174.55 15 3 no (0.80000000 0.20000000) * ## 143) total_night_minutes&gt;=174.55 48 7 yes (0.14583333 0.85416667) * ## 9) international_plan=yes 276 107 no (0.61231884 0.38768116) ## 18) total_intl_calls&gt;=2.5 222 53 no (0.76126126 0.23873874) ## 36) total_intl_minutes&lt; 13.05 177 8 no (0.95480226 0.04519774) * ## 37) total_intl_minutes&gt;=13.05 45 0 yes (0.00000000 1.00000000) * ## 19) total_intl_calls&lt; 2.5 54 0 yes (0.00000000 1.00000000) * ## 5) number_customer_service_calls&gt;=3.5 271 132 no (0.51291513 0.48708487) ## 10) total_day_minutes&gt;=160.55 169 41 no (0.75739645 0.24260355) ## 20) total_eve_minutes&gt;=146.8 144 25 no (0.82638889 0.17361111) * ## 21) total_eve_minutes&lt; 146.8 25 9 yes (0.36000000 0.64000000) * ## 11) total_day_minutes&lt; 160.55 102 11 yes (0.10784314 0.89215686) * ## 3) total_day_minutes&gt;=264.45 220 88 yes (0.40000000 0.60000000) ## 6) voice_mail_plan=yes 51 5 no (0.90196078 0.09803922) * ## 7) voice_mail_plan=no 169 42 yes (0.24852071 0.75147929) ## 14) total_eve_minutes&lt; 149.95 31 5 no (0.83870968 0.16129032) * ## 15) total_eve_minutes&gt;=149.95 138 16 yes (0.11594203 0.88405797) ## 30) total_night_minutes&lt; 118.65 7 1 no (0.85714286 0.14285714) * ## 31) total_night_minutes&gt;=118.65 131 10 yes (0.07633588 0.92366412) * #to display it in diagram library(rattle) ## Loading required package: tibble ## Loading required package: bitops ## Rattle: A free graphical interface for data science with R. ## Version 5.5.1 Copyright (c) 2006-2021 Togaware Pty Ltd. ## Type &#39;rattle()&#39; to shake, rattle, and roll your data. library(rpart.plot) fancyRpartPlot(churn_model) #predicting the model data based on the model built from training data set pred&lt;- predict(churn_model,testData,type = &quot;class&quot; ) pred ## 3 7 10 14 16 17 19 20 22 24 39 43 45 50 54 57 ## no no no no yes no no no yes no no no no no no no ## 58 59 62 63 66 72 76 77 80 81 84 85 91 93 94 96 ## no no no no no no no yes no no no no no no no no ## 98 100 101 102 105 108 110 111 112 116 118 124 127 129 133 134 ## no no no no no no no no no yes yes no yes no no no ## 137 140 141 147 148 149 150 151 152 157 158 159 160 164 170 177 ## no no no no yes no no no no yes no no no no no no ## 179 183 184 187 193 194 200 202 213 219 220 221 223 224 229 230 ## no no no no no no no no no no no no no no no no ## 232 234 235 236 237 238 243 244 245 247 258 261 263 265 274 276 ## no no no yes no no no no no no no no no no no no ## 279 281 288 289 293 294 295 297 303 309 310 311 312 315 323 324 ## no no no no no yes no no no no yes no no no no no ## 327 331 334 335 338 341 342 345 348 350 351 353 359 360 362 366 ## no no no no no no no no no yes no no no no no yes ## 369 378 379 383 387 393 394 395 400 401 404 406 411 412 414 417 ## no no yes no no no no no no no no no no no no yes ## 423 440 442 449 452 453 454 456 461 462 464 466 468 473 478 480 ## no no no no no no no yes no no no yes no no no no ## 486 487 492 493 495 498 499 509 513 515 519 520 528 530 531 536 ## no no yes yes no no yes no no no no no no no no no ## 537 539 540 544 548 551 554 558 559 560 563 567 568 572 576 583 ## no no no no yes no no no no no no no no no no no ## 585 587 590 593 596 599 604 611 612 621 623 624 626 631 633 634 ## yes no no no no no no no no no no no no no no no ## 635 638 640 642 644 645 653 654 659 664 666 667 673 677 678 679 ## no no no no no no no no no no no no no no no no ## 681 686 692 695 697 699 700 704 705 711 713 716 717 720 721 724 ## no no no yes no no no no no no no yes no no no no ## 726 727 736 737 740 741 745 747 750 755 756 759 760 766 769 771 ## no no no no no no no no no no no no no no no no ## 784 785 786 790 791 792 793 795 796 800 801 803 806 807 808 811 ## no no no no no no no no no no no no no no no no ## 812 813 821 824 825 826 827 831 833 834 836 839 840 841 844 846 ## no no no no no no no yes yes no no no no no no no ## 851 855 865 876 877 884 887 890 892 893 894 896 899 903 907 910 ## no no no no no no no no no no no no no no no no ## 911 921 922 923 925 928 934 937 941 944 952 954 958 961 964 965 ## no no no no no no yes no no no yes no no no no no ## 966 969 972 973 977 978 982 984 985 987 992 994 997 998 1006 1011 ## no no no no no yes no no no no no no no no no no ## 1018 1020 1026 1030 1032 1038 1040 1041 1043 1044 1049 1053 1059 1060 1061 1069 ## no no no no no no no no no no no no no no no no ## 1070 1083 1091 1094 1095 1098 1102 1109 1110 1113 1121 1122 1124 1126 1128 1129 ## no no no no no no no no no no no yes no no no no ## 1132 1136 1149 1150 1153 1156 1158 1163 1166 1170 1172 1173 1176 1179 1180 1181 ## no no no no no yes no no no no no no no no no no ## 1185 1192 1194 1208 1210 1213 1215 1216 1221 1223 1230 1232 1237 1250 1269 1270 ## no no yes no no no no no no no no yes no no no yes ## 1276 1278 1284 1285 1288 1289 1291 1299 1301 1303 1304 1308 1310 1311 1313 1314 ## no no no no no no no no no yes no no no no no no ## 1319 1320 1326 1327 1337 1340 1341 1342 1346 1354 1355 1356 1361 1365 1368 1374 ## no no yes no no yes no no yes no no no no yes no yes ## 1377 1380 1386 1387 1388 1391 1392 1393 1405 1406 1408 1410 1411 1425 1430 1433 ## no no no no no no no yes no yes yes no no no no no ## 1435 1436 1438 1440 1443 1445 1452 1453 1454 1467 1469 1474 1481 1482 1484 1491 ## no yes no no no no no no no no no yes no no no no ## 1506 1507 1511 1512 1517 1527 1528 1531 1535 1536 1540 1543 1548 1549 1550 1552 ## no no yes no no no no no no no no no no yes no no ## 1553 1562 1564 1566 1574 1578 1585 1586 1587 1597 1606 1611 1612 1615 1616 1621 ## no no no no no no no no no no no yes no yes no no ## 1623 1627 1631 1642 1647 1652 1655 1659 1662 1665 1667 1669 1674 1676 1677 1681 ## no no no no yes yes no no no no no no no no no no ## 1682 1686 1688 1690 1691 1692 1696 1698 1702 1707 1709 1710 1712 1716 1718 1721 ## no no no no no yes no no yes no no no no no no no ## 1725 1730 1732 1733 1739 1740 1743 1744 1746 1748 1751 1753 1756 1757 1759 1761 ## no no yes no no yes no no no no no yes no no no no ## 1763 1764 1770 1771 1772 1775 1777 1780 1786 1791 1801 1812 1816 1823 1829 1831 ## no no no no no no no no no no yes no no no no no ## 1834 1839 1840 1842 1843 1844 1847 1857 1861 1867 1871 1872 1874 1877 1881 1882 ## no no no no yes no no no no no no no no no no yes ## 1890 1891 1894 1895 1899 1901 1904 1905 1908 1910 1916 1921 1926 1927 1930 1932 ## no no yes no yes no yes no no no no no no no no no ## 1935 1938 1940 1943 1951 1953 1954 1959 1967 1970 1976 1979 1981 1983 1988 1990 ## yes no no no yes no no no no no no yes yes no no no ## 1991 1993 1999 2003 2008 2010 2012 2016 2019 2020 2025 2031 2032 2033 2034 2035 ## no no no no no no no no no no no no yes no no no ## 2036 2037 2038 2043 2045 2048 2052 2060 2065 2066 2069 2071 2074 2075 2076 2081 ## no no no no no no yes yes no no no no no no no no ## 2087 2089 2091 2092 2094 2095 2096 2100 2102 2104 2106 2107 2108 2115 2116 2118 ## no no no no no no no yes no yes no yes yes no yes no ## 2126 2136 2139 2141 2144 2146 2148 2151 2154 2167 2169 2178 2185 2194 2197 2205 ## no no no yes no no no yes no no no no no no no no ## 2209 2215 2223 2226 2228 2229 2238 2240 2245 2252 2259 2260 2262 2264 2267 2268 ## no no no no no no no no no no yes no no no no yes ## 2273 2276 2277 2287 2288 2295 2297 2299 2314 2319 2320 2324 2331 2333 2335 2337 ## no no no no yes no no no no no no no no no no no ## 2338 2352 2355 2357 2364 2366 2368 2369 2372 2375 2379 2384 2392 2399 2400 2402 ## no no yes yes no no no no no no no no no no no yes ## 2405 2406 2408 2412 2415 2416 2417 2422 2424 2429 2435 2437 2442 2446 2447 2451 ## no no yes no no yes no yes no yes no no no no no no ## 2454 2456 2459 2460 2462 2464 2466 2467 2468 2470 2471 2473 2474 2476 2478 2480 ## no no no no no no no no no no no no no no no yes ## 2482 2483 2484 2486 2488 2491 2496 2497 2498 2501 2503 2504 2505 2512 2513 2514 ## no no no no no no no no no no no no no no no no ## 2518 2519 2520 2525 2527 2530 2538 2539 2543 2546 2556 2557 2558 2559 2560 2564 ## no no no no yes no no no yes no no no no no no no ## 2565 2567 2570 2584 2588 2589 2590 2599 2603 2604 2607 2608 2610 2615 2621 2624 ## no no no no no no no no yes no yes no no no no no ## 2631 2633 2635 2636 2637 2639 2641 2645 2647 2649 2650 2656 2657 2660 2672 2675 ## no no no no no no no no no no no no no no no no ## 2678 2679 2681 2684 2685 2694 2697 2701 2703 2704 2708 2710 2714 2716 2721 2725 ## yes no no no no no yes no no no no no no no no yes ## 2728 2729 2734 2738 2747 2748 2753 2756 2759 2760 2761 2762 2765 2767 2772 2773 ## no no no no no yes no no no no yes no no no no yes ## 2774 2777 2778 2779 2780 2784 2785 2787 2794 2795 2796 2802 2803 2807 2809 2812 ## no no no no no no yes yes no no no yes no no no no ## 2813 2814 2818 2819 2820 2821 2823 2830 2832 2833 2834 2836 2837 2838 2842 2843 ## no no no no no yes no no no no yes no no no no no ## 2847 2848 2849 2851 2854 2858 2865 2867 2869 2882 2886 2888 2889 2890 2893 2895 ## no no no no no no no no yes no no no no yes no no ## 2896 2899 2904 2908 2909 2914 2915 2917 2918 2921 2925 2926 2928 2935 2940 2941 ## no no no no yes no yes no no no yes no no no no no ## 2943 2944 2949 2952 2955 2959 2969 2970 2972 2984 2987 2990 2991 2993 2995 3004 ## yes no no no no yes yes no yes no no yes no no yes no ## 3011 3014 3016 3021 3023 3026 3027 3028 3030 3041 3043 3045 3047 3056 3058 3059 ## no no no no no no no no no no no no no no no no ## 3069 3072 3074 3075 3078 3079 3084 3085 3086 3098 3099 3102 3112 3113 3114 3116 ## no no no no no no no no no no no no no yes yes no ## 3118 3119 3120 3123 3125 3130 3136 3141 3144 3147 3150 3151 3152 3153 3155 3156 ## no no no no no no no yes no no no no no no no no ## 3157 3161 3164 3170 3183 3185 3186 3194 3195 3196 3204 3205 3207 3212 3217 3219 ## no no no yes no no no no no no no no no no no no ## 3223 3225 3226 3228 3229 3231 3232 3233 3237 3246 3248 3253 3257 3260 3261 3264 ## no yes no no no no no no no no yes no yes no no no ## 3271 3274 3275 3278 3281 3282 3291 3295 3299 3300 3303 3305 3309 3312 3315 3318 ## no no no no yes no no no no no no no no no no no ## 3319 3325 3326 3327 3333 3337 3338 3339 3340 3343 3344 3349 3360 3363 3370 3372 ## no no no no no no no no no no no no no no no no ## 3373 3374 3375 3381 3383 3388 3393 3403 3406 3415 3419 3420 3422 3423 3428 3434 ## yes yes no no no no no no no no no no no no no no ## 3435 3438 3441 3446 3450 3453 3455 3457 3459 3463 3474 3477 3487 3490 3497 3498 ## no no no no no yes no no no no no no yes no no no ## 3506 3514 3517 3522 3523 3525 3526 3527 3531 3532 3533 3534 3536 3537 3539 3553 ## no no no no no no no no no no no no no no no no ## 3555 3560 3564 3566 3569 3572 3573 3574 3575 3576 3578 3579 3584 3586 3588 3589 ## yes no no no no no no no no no no no no yes yes no ## 3594 3595 3598 3601 3602 3610 3618 3624 3629 3630 3634 3651 3653 3659 3679 3682 ## no no no no no yes yes no no no no no no no no yes ## 3685 3688 3689 3692 3696 3697 3708 3709 3712 3720 3725 3727 3731 3737 3742 3747 ## no no yes no no no no no no no no no no no no no ## 3752 3756 3759 3761 3766 3769 3772 3776 3784 3786 3788 3789 3790 3796 3797 3798 ## yes no no no no no no no no no no no no no no no ## 3802 3805 3808 3819 3822 3825 3832 3835 3838 3853 3854 3857 3858 3860 3862 3863 ## no no no no no no no no no no no no no no no no ## 3870 3874 3875 3876 3879 3881 3884 3886 3887 3897 3912 3915 3916 3918 3919 3922 ## no no no no no no no no no no no no no yes no no ## 3924 3925 3928 3933 3942 3947 3948 3949 3952 3953 3954 3966 3970 3971 3975 3977 ## no no no no no no no no no no no no no no no no ## 3978 3980 3982 3983 3984 3986 3991 3995 3996 4003 4008 4014 4016 4019 4020 4023 ## no no no no no no no no no yes no no no yes no no ## 4024 4029 4034 4045 4051 4053 4055 4056 4057 4060 4065 4066 4069 4070 4078 4079 ## yes no no no no no no no no no no no no no no no ## 4084 4087 4090 4091 4094 4098 4100 4103 4106 4110 4113 4114 4117 4118 4121 4122 ## no no no no no no no no no no no no no no no yes ## 4124 4127 4135 4137 4141 4146 4147 4150 4153 4159 4160 4167 4170 4177 4179 4180 ## no no no no yes no no no no no no no no no no no ## 4182 4186 4191 4192 4195 4200 4201 4203 4204 4206 4207 4210 4212 4216 4217 4220 ## yes no yes no no no no no no no no no no no no no ## 4221 4222 4226 4227 4232 4239 4241 4243 4244 4251 4254 4256 4260 4272 4280 4282 ## no no yes no no no no no no no yes no no no yes no ## 4283 4284 4286 4287 4290 4292 4296 4297 4301 4305 4310 4321 4327 4329 4330 4331 ## no yes yes no no no no yes no no yes no no yes no yes ## 4332 4334 4351 4352 4353 4354 4363 4372 4373 4378 4386 4391 4395 4399 4401 4402 ## no no no no no no no yes no no no no no no no no ## 4413 4414 4416 4417 4419 4421 4424 4428 4430 4431 4432 4434 4438 4441 4447 4451 ## no no no no no no no no no no no no yes no no no ## 4454 4456 4457 4459 4463 4471 4472 4486 4493 4497 4498 4499 4501 4502 4503 4504 ## no no no no no no yes no yes no no no no no yes no ## 4505 4520 4522 4528 4530 4534 4535 4536 4537 4539 4550 4554 4555 4566 4572 4573 ## no no no no no no no no no no no no no no no yes ## 4591 4594 4598 4599 4602 4604 4611 4613 4617 4618 4621 4623 4626 4628 4632 4633 ## no no yes no no no no no no no no no no no no no ## 4636 4641 4642 4643 4648 4650 4651 4652 4662 4663 4666 4667 4672 4673 4681 4683 ## no no no no no no yes no no no no no no no no no ## 4691 4694 4700 4702 4706 4707 4709 4711 4715 4720 4725 4734 4740 4745 4748 4751 ## no no no no no no no yes no no no no no no no no ## 4754 4755 4759 4761 4763 4769 4770 4771 4772 4773 4774 4778 4780 4783 4786 4789 ## no no no no no no no no no yes yes no no no no yes ## 4793 4806 4807 4809 4811 4814 4818 4819 4820 4822 4826 4827 4832 4833 4834 4838 ## no no no no no no no no no no yes no no yes no yes ## 4840 4841 4842 4846 4854 4855 4856 4860 4866 4868 4870 4871 4872 4873 4875 4876 ## no no no no no no no no no no no no no no no no ## 4880 4889 4907 4909 4919 4925 4933 4935 4937 4940 4941 4942 4943 4944 4951 4966 ## no no no no yes yes no no no yes no no no yes no no ## 4968 4971 4973 4978 4983 4984 4985 4986 4987 4989 4992 4997 ## no no no no no no no no no no yes no ## Levels: no yes pred1&lt;- data.frame(pred) #View(pred1) #Confusion matrix is a technique for summarizing the performance of a classification algorithm table(testData$churn ,pred)#create confusion matrix to see how mnay cus are correctly predicted and incorrectly predicted ## pred ## no yes ## no 1263 25 ## yes 67 145 ##### #####RANDOM FOREST MODEL ##### library(randomForest) ## randomForest 4.7-1.1 ## Type rfNews() to see new features/changes/bug fixes. ## ## Attaching package: &#39;randomForest&#39; ## The following object is masked from &#39;package:rattle&#39;: ## ## importance #to build the random forest model #trainData$churn = as.character(trainData$churn) random_model &lt;- randomForest(churn~.,data=trainData, importance = T) random_model ## ## Call: ## randomForest(formula = churn ~ ., data = trainData, importance = T) ## Type of random forest: classification ## Number of trees: 500 ## No. of variables tried at each split: 4 ## ## OOB estimate of error rate: 4.06% ## Confusion matrix: ## no yes class.error ## no 2983 22 0.007321131 ## yes 120 375 0.242424242 #predicting the data based on the model developed ran_pred &lt;- predict(random_model,testData) ran_pred ## 3 7 10 14 16 17 19 20 22 24 39 43 45 50 54 57 ## no no no no yes no no no yes no no no no no no no ## 58 59 62 63 66 72 76 77 80 81 84 85 91 93 94 96 ## no no no no no no no yes no no no no no no no no ## 98 100 101 102 105 108 110 111 112 116 118 124 127 129 133 134 ## no no no no no no no no no yes yes no yes no no no ## 137 140 141 147 148 149 150 151 152 157 158 159 160 164 170 177 ## no no no no yes no no no no yes no no no no no no ## 179 183 184 187 193 194 200 202 213 219 220 221 223 224 229 230 ## no no no no no no no no no yes no no no no no no ## 232 234 235 236 237 238 243 244 245 247 258 261 263 265 274 276 ## no no no yes no no no no no no no no no no no no ## 279 281 288 289 293 294 295 297 303 309 310 311 312 315 323 324 ## no no no no no yes no no no no no no no no no no ## 327 331 334 335 338 341 342 345 348 350 351 353 359 360 362 366 ## no no no no no no no no no yes no no no no no yes ## 369 378 379 383 387 393 394 395 400 401 404 406 411 412 414 417 ## no no yes no no no no no no no no no no no no yes ## 423 440 442 449 452 453 454 456 461 462 464 466 468 473 478 480 ## no no no no no no no yes no no no yes no no no no ## 486 487 492 493 495 498 499 509 513 515 519 520 528 530 531 536 ## no no yes yes no no no no no yes no no no no no no ## 537 539 540 544 548 551 554 558 559 560 563 567 568 572 576 583 ## no no no no yes yes no no no no no no no no no no ## 585 587 590 593 596 599 604 611 612 621 623 624 626 631 633 634 ## yes no no no no no no no no no no no no no no no ## 635 638 640 642 644 645 653 654 659 664 666 667 673 677 678 679 ## no no no no no no no no no no no no no no no no ## 681 686 692 695 697 699 700 704 705 711 713 716 717 720 721 724 ## no no no no no no no no no no no yes no no no no ## 726 727 736 737 740 741 745 747 750 755 756 759 760 766 769 771 ## no no no yes no no no no no no no no no no no no ## 784 785 786 790 791 792 793 795 796 800 801 803 806 807 808 811 ## no no no no no no no no no no no no no no no no ## 812 813 821 824 825 826 827 831 833 834 836 839 840 841 844 846 ## no no no no no no no yes yes no no no no no no no ## 851 855 865 876 877 884 887 890 892 893 894 896 899 903 907 910 ## no no no no no no no no no no no no no no no no ## 911 921 922 923 925 928 934 937 941 944 952 954 958 961 964 965 ## no no no no no no yes no no no yes no no no no no ## 966 969 972 973 977 978 982 984 985 987 992 994 997 998 1006 1011 ## no no no no no yes no no no no no no no no no no ## 1018 1020 1026 1030 1032 1038 1040 1041 1043 1044 1049 1053 1059 1060 1061 1069 ## no no no no no no no no no no no no no no no no ## 1070 1083 1091 1094 1095 1098 1102 1109 1110 1113 1121 1122 1124 1126 1128 1129 ## no no no no no no no no no no no yes no no no no ## 1132 1136 1149 1150 1153 1156 1158 1163 1166 1170 1172 1173 1176 1179 1180 1181 ## no no no no no yes no no no no no no no no no no ## 1185 1192 1194 1208 1210 1213 1215 1216 1221 1223 1230 1232 1237 1250 1269 1270 ## no no yes no no no no no no no no yes no no no yes ## 1276 1278 1284 1285 1288 1289 1291 1299 1301 1303 1304 1308 1310 1311 1313 1314 ## no no no yes no no no no no yes no no no no no no ## 1319 1320 1326 1327 1337 1340 1341 1342 1346 1354 1355 1356 1361 1365 1368 1374 ## no no yes no no yes no no yes no no no no yes no yes ## 1377 1380 1386 1387 1388 1391 1392 1393 1405 1406 1408 1410 1411 1425 1430 1433 ## no no no no no no no yes no yes yes no no no no no ## 1435 1436 1438 1440 1443 1445 1452 1453 1454 1467 1469 1474 1481 1482 1484 1491 ## no yes no no no no no no no no no yes no no no no ## 1506 1507 1511 1512 1517 1527 1528 1531 1535 1536 1540 1543 1548 1549 1550 1552 ## no no yes no no no no yes no no no no no no no no ## 1553 1562 1564 1566 1574 1578 1585 1586 1587 1597 1606 1611 1612 1615 1616 1621 ## no no no no no no no no no no no no no yes no no ## 1623 1627 1631 1642 1647 1652 1655 1659 1662 1665 1667 1669 1674 1676 1677 1681 ## no no no no yes yes no no no no no no no no no no ## 1682 1686 1688 1690 1691 1692 1696 1698 1702 1707 1709 1710 1712 1716 1718 1721 ## no no no no no yes no no yes no no no no no no no ## 1725 1730 1732 1733 1739 1740 1743 1744 1746 1748 1751 1753 1756 1757 1759 1761 ## no no yes no no yes no no no no no yes no no no no ## 1763 1764 1770 1771 1772 1775 1777 1780 1786 1791 1801 1812 1816 1823 1829 1831 ## no no no no no no no no no no no no no no no yes ## 1834 1839 1840 1842 1843 1844 1847 1857 1861 1867 1871 1872 1874 1877 1881 1882 ## no no no no yes no no no no no no no no no yes yes ## 1890 1891 1894 1895 1899 1901 1904 1905 1908 1910 1916 1921 1926 1927 1930 1932 ## no no yes no yes no yes no no no no no no no no no ## 1935 1938 1940 1943 1951 1953 1954 1959 1967 1970 1976 1979 1981 1983 1988 1990 ## yes no no no yes no no no no no no yes no no no no ## 1991 1993 1999 2003 2008 2010 2012 2016 2019 2020 2025 2031 2032 2033 2034 2035 ## no no no no no no no no no no no no yes no no no ## 2036 2037 2038 2043 2045 2048 2052 2060 2065 2066 2069 2071 2074 2075 2076 2081 ## no no no no no no yes yes no no no no no no no no ## 2087 2089 2091 2092 2094 2095 2096 2100 2102 2104 2106 2107 2108 2115 2116 2118 ## no no no no no no no yes no yes no yes yes no yes no ## 2126 2136 2139 2141 2144 2146 2148 2151 2154 2167 2169 2178 2185 2194 2197 2205 ## no no no no no no yes yes no no no no no no no no ## 2209 2215 2223 2226 2228 2229 2238 2240 2245 2252 2259 2260 2262 2264 2267 2268 ## no no no no no no yes no no no yes no no no no yes ## 2273 2276 2277 2287 2288 2295 2297 2299 2314 2319 2320 2324 2331 2333 2335 2337 ## no no no no no no no no no no no no no no no no ## 2338 2352 2355 2357 2364 2366 2368 2369 2372 2375 2379 2384 2392 2399 2400 2402 ## no no yes yes no no no no no no no no no no no yes ## 2405 2406 2408 2412 2415 2416 2417 2422 2424 2429 2435 2437 2442 2446 2447 2451 ## no no yes no no yes no no no yes no no no no no no ## 2454 2456 2459 2460 2462 2464 2466 2467 2468 2470 2471 2473 2474 2476 2478 2480 ## no no no no no no no no no no no no no no no yes ## 2482 2483 2484 2486 2488 2491 2496 2497 2498 2501 2503 2504 2505 2512 2513 2514 ## no no no no no no no no no no no no no no no no ## 2518 2519 2520 2525 2527 2530 2538 2539 2543 2546 2556 2557 2558 2559 2560 2564 ## no no no no yes no no no yes no no no no no no no ## 2565 2567 2570 2584 2588 2589 2590 2599 2603 2604 2607 2608 2610 2615 2621 2624 ## no no no no no no no no yes no yes no no yes no no ## 2631 2633 2635 2636 2637 2639 2641 2645 2647 2649 2650 2656 2657 2660 2672 2675 ## no no no no no no no no no no no no no no no no ## 2678 2679 2681 2684 2685 2694 2697 2701 2703 2704 2708 2710 2714 2716 2721 2725 ## yes no no no no no yes yes no no no no no no no yes ## 2728 2729 2734 2738 2747 2748 2753 2756 2759 2760 2761 2762 2765 2767 2772 2773 ## no no no no no yes no no no no yes no no no no yes ## 2774 2777 2778 2779 2780 2784 2785 2787 2794 2795 2796 2802 2803 2807 2809 2812 ## no no no no no no no yes no yes no yes no no no no ## 2813 2814 2818 2819 2820 2821 2823 2830 2832 2833 2834 2836 2837 2838 2842 2843 ## no no no no no no no no no no no no no no no no ## 2847 2848 2849 2851 2854 2858 2865 2867 2869 2882 2886 2888 2889 2890 2893 2895 ## no no no no no no no no yes no no no no yes no no ## 2896 2899 2904 2908 2909 2914 2915 2917 2918 2921 2925 2926 2928 2935 2940 2941 ## no no no no yes no no no no no yes no no no no no ## 2943 2944 2949 2952 2955 2959 2969 2970 2972 2984 2987 2990 2991 2993 2995 3004 ## yes no no no no yes yes no yes no no yes no no no no ## 3011 3014 3016 3021 3023 3026 3027 3028 3030 3041 3043 3045 3047 3056 3058 3059 ## no no no no no no no no no no no no no no no no ## 3069 3072 3074 3075 3078 3079 3084 3085 3086 3098 3099 3102 3112 3113 3114 3116 ## no no no no no no no no no no no no no yes yes no ## 3118 3119 3120 3123 3125 3130 3136 3141 3144 3147 3150 3151 3152 3153 3155 3156 ## no no no no no no no yes no no no no yes no no no ## 3157 3161 3164 3170 3183 3185 3186 3194 3195 3196 3204 3205 3207 3212 3217 3219 ## no no no yes no no no no no no no no no no no no ## 3223 3225 3226 3228 3229 3231 3232 3233 3237 3246 3248 3253 3257 3260 3261 3264 ## no yes no no no no no no no no yes no yes no no no ## 3271 3274 3275 3278 3281 3282 3291 3295 3299 3300 3303 3305 3309 3312 3315 3318 ## no no no no yes no no no no no no yes no no no no ## 3319 3325 3326 3327 3333 3337 3338 3339 3340 3343 3344 3349 3360 3363 3370 3372 ## no no no no no no no no no no no no no no no no ## 3373 3374 3375 3381 3383 3388 3393 3403 3406 3415 3419 3420 3422 3423 3428 3434 ## yes yes no no no no no no no no no no no no no no ## 3435 3438 3441 3446 3450 3453 3455 3457 3459 3463 3474 3477 3487 3490 3497 3498 ## no no no no no yes no no no no no no yes no no no ## 3506 3514 3517 3522 3523 3525 3526 3527 3531 3532 3533 3534 3536 3537 3539 3553 ## no no no no no no yes no no no no no no no no no ## 3555 3560 3564 3566 3569 3572 3573 3574 3575 3576 3578 3579 3584 3586 3588 3589 ## yes no no no no no no no no no no no no yes yes no ## 3594 3595 3598 3601 3602 3610 3618 3624 3629 3630 3634 3651 3653 3659 3679 3682 ## no no no no no no yes no yes no no no no no no yes ## 3685 3688 3689 3692 3696 3697 3708 3709 3712 3720 3725 3727 3731 3737 3742 3747 ## no no yes no no no no no no no no no no no no no ## 3752 3756 3759 3761 3766 3769 3772 3776 3784 3786 3788 3789 3790 3796 3797 3798 ## no no no no no no no no no no no no no no no no ## 3802 3805 3808 3819 3822 3825 3832 3835 3838 3853 3854 3857 3858 3860 3862 3863 ## no no no no no no no no no no no no no no no no ## 3870 3874 3875 3876 3879 3881 3884 3886 3887 3897 3912 3915 3916 3918 3919 3922 ## no yes no no no no no no no no no no no yes no no ## 3924 3925 3928 3933 3942 3947 3948 3949 3952 3953 3954 3966 3970 3971 3975 3977 ## no no no no no no no no no no no no no no no no ## 3978 3980 3982 3983 3984 3986 3991 3995 3996 4003 4008 4014 4016 4019 4020 4023 ## no no no no no no no no no yes no no no yes no no ## 4024 4029 4034 4045 4051 4053 4055 4056 4057 4060 4065 4066 4069 4070 4078 4079 ## yes no no no no no no no no no no no no no no no ## 4084 4087 4090 4091 4094 4098 4100 4103 4106 4110 4113 4114 4117 4118 4121 4122 ## no no no no no no no no no no no no no no no yes ## 4124 4127 4135 4137 4141 4146 4147 4150 4153 4159 4160 4167 4170 4177 4179 4180 ## no no no no yes no no no no no no no no no no no ## 4182 4186 4191 4192 4195 4200 4201 4203 4204 4206 4207 4210 4212 4216 4217 4220 ## no no yes no no no no no no no no no no no no no ## 4221 4222 4226 4227 4232 4239 4241 4243 4244 4251 4254 4256 4260 4272 4280 4282 ## no no yes no no no no no no no yes no no no no no ## 4283 4284 4286 4287 4290 4292 4296 4297 4301 4305 4310 4321 4327 4329 4330 4331 ## no yes yes no no no no yes no no yes no no yes no yes ## 4332 4334 4351 4352 4353 4354 4363 4372 4373 4378 4386 4391 4395 4399 4401 4402 ## no no no no no no no no no no no no no no no no ## 4413 4414 4416 4417 4419 4421 4424 4428 4430 4431 4432 4434 4438 4441 4447 4451 ## no no no no no no no no no no no no yes no no no ## 4454 4456 4457 4459 4463 4471 4472 4486 4493 4497 4498 4499 4501 4502 4503 4504 ## no no no no no no yes no yes no no no no no yes no ## 4505 4520 4522 4528 4530 4534 4535 4536 4537 4539 4550 4554 4555 4566 4572 4573 ## no no no no no no no no no no no no no no no yes ## 4591 4594 4598 4599 4602 4604 4611 4613 4617 4618 4621 4623 4626 4628 4632 4633 ## no no yes no no no no no no no no no no no no no ## 4636 4641 4642 4643 4648 4650 4651 4652 4662 4663 4666 4667 4672 4673 4681 4683 ## no no no no no no yes no no no no no no no no no ## 4691 4694 4700 4702 4706 4707 4709 4711 4715 4720 4725 4734 4740 4745 4748 4751 ## no no no no no no no yes no no no no no no no no ## 4754 4755 4759 4761 4763 4769 4770 4771 4772 4773 4774 4778 4780 4783 4786 4789 ## no no no no no no no no no yes yes no no no no yes ## 4793 4806 4807 4809 4811 4814 4818 4819 4820 4822 4826 4827 4832 4833 4834 4838 ## no no no no no no no no no no yes no no yes no yes ## 4840 4841 4842 4846 4854 4855 4856 4860 4866 4868 4870 4871 4872 4873 4875 4876 ## no no no no no no no no no no no no no no no no ## 4880 4889 4907 4909 4919 4925 4933 4935 4937 4940 4941 4942 4943 4944 4951 4966 ## no no no no yes yes no no no yes no no no yes no no ## 4968 4971 4973 4978 4983 4984 4985 4986 4987 4989 4992 4997 ## no no no no no no no no no no yes no ## Levels: no yes ran_pred1 &lt;-data.frame(ran_pred) table(testData$churn ,ran_pred) # confusion matrix ## ran_pred ## no yes ## no 1277 11 ## yes 55 157 #accuracy rate (1276+ 173)/(1276+12+39+173) # 97 % of accuracy : higher than decision tree , where accuracy rate is 95 % ## [1] 0.966 #most commonly mean decrease gini is considered importance(random_model) ## no yes MeanDecreaseAccuracy ## international_plan 70.1534778 84.963598157 88.6010550 ## voice_mail_plan 19.5523843 23.072080895 24.0859252 ## number_vmail_messages 18.6657559 21.798067096 22.6657573 ## total_day_minutes 30.4904455 32.269788924 38.5881675 ## total_day_calls -1.2848604 -0.214772232 -1.2228138 ## total_day_charge 32.3505458 36.987647830 42.7724825 ## total_eve_minutes 22.0808381 25.364846997 26.2896431 ## total_eve_calls -0.5331128 0.001980809 -0.4572153 ## total_eve_charge 22.6468191 20.739804871 26.2958383 ## total_night_minutes 18.6179261 8.185205331 19.8399780 ## total_night_calls -2.7066540 -0.940117968 -2.9825969 ## total_night_charge 18.7392303 7.487913366 20.2575788 ## total_intl_minutes 24.2990560 17.021777584 27.6407980 ## total_intl_calls 34.8325069 47.492777609 48.3187137 ## total_intl_charge 24.6371410 18.333183280 28.5697360 ## number_customer_service_calls 80.0033561 93.688643844 103.2173710 ## MeanDecreaseGini ## international_plan 77.64463 ## voice_mail_plan 20.43260 ## number_vmail_messages 25.63054 ## total_day_minutes 117.40228 ## total_day_calls 25.89814 ## total_day_charge 124.87866 ## total_eve_minutes 56.47361 ## total_eve_calls 22.95123 ## total_eve_charge 55.71144 ## total_night_minutes 36.71510 ## total_night_calls 24.78677 ## total_night_charge 36.01043 ## total_intl_minutes 35.73014 ## total_intl_calls 50.34594 ## total_intl_charge 36.83692 ## number_customer_service_calls 102.69939 # Variables that result in nodes with higher purity have a higher decrease in Gini coefficient. varImpPlot(random_model) #total day charges have higher decrease in gini index so its more significant than other "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
